trigger:
- master

resources:
  repositories:
    - repository: P1
      type: git
      name: P1/P1

parameters:
  - name: vmImageName
    type: string
    default: ubuntu-latest
  - name: dockerRegistryServiceConnection
    type: string
    default: 'fd9b2290-6f4c-4276-8379-a6cc428840f4'
  - name: imageRepository
    type: string
    default: 'vijaymapipelinesdotnetcoredocker'
  - name: containerRegistry
    type: string
    default: 'vijaymapipelinesdotnetcore9a18.azurecr.io'
  - name: dockerfilePath
    type: string
    default: '**/Dockerfile'
  - name: tag
    type: string
    default: '$(Build.BuildId)'
  - name: imagePullSecret
    type: string
    default: 'vijaymapipelinesdotnetcore9a182bba-auth'

extends:
  template: secure-deployment.yml@P1
  parameters:
    vmImageName: ubuntu-latest

    buildSteps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

    deployStages:
    - stage: deploy

      jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: ${{ parameters.vmImageName }}
        environment: 'PMAllStarsSpringRetreat.demo'
        strategy:
          runOnce:
            deploy:
              steps:
              - task: KubernetesManifest@0
                displayName: Create imagePullSecret
                inputs:
                  action: createSecret
                  secretName: ${{ parameters.imagePullSecret }}
                  dockerRegistryEndpoint: ${{ parameters.dockerRegistryServiceConnection }}
              - task: KubernetesManifest@0
                displayName: Deploy to Kubernetes cluster
                inputs:
                  action: deploy
                  manifests: |
                    $(Pipeline.Workspace)/manifests/deployment.yml
                    $(Pipeline.Workspace)/manifests/service.yml
                  imagePullSecrets: |
                    ${{ parameters.imagePullSecret }}
                  containers: |
                    ${{ parameters.containerRegistry }}/${{ parameters.imageRepository }}:${{ parameters.tag }}
